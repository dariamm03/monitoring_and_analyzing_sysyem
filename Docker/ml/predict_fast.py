import pandas as pd
import joblib
from scipy.sparse import hstack

# üì¶ –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—Å–µ –ø–∞–π–ø–ª–∞–π–Ω—ã
model = joblib.load('model.pkl')
tfidf = joblib.load('tfidf.pkl')
enc_user = joblib.load('enc_user.pkl')
enc_proc = joblib.load('enc_proc.pkl')
enc_sev = joblib.load('enc_sev.pkl')
scaler = joblib.load('scaler.pkl')

print("‚úÖ –ú–æ–¥–µ–ª—å –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã")

# üìÇ –ß–∏—Ç–∞–µ–º —Ç–æ–ª—å–∫–æ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤
df = pd.read_csv('logs.csv', sep=';', nrows=10)
df.fillna('', inplace=True)

# üéØ –ò–∑–≤–ª–µ–∫–∞–µ–º –Ω—É–∂–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
X_text = df['FormattedMessage']
X_user = df['UserName']
X_proc = df['ProcessName']
X_sev = df['Severity']
X_time = pd.to_datetime(df['Timestamp'], errors='coerce')

# –í—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏
df['hour'] = X_time.dt.hour.fillna(0).astype(int)
df['weekday'] = X_time.dt.weekday.fillna(0).astype(int)

# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è
X_text_tfidf = tfidf.transform(X_text)
user_encoded = enc_user.transform(X_user)
proc_encoded = enc_proc.transform(X_proc)
sev_encoded = enc_sev.transform(X_sev)

meta_features = pd.DataFrame({
    'user': user_encoded,
    'proc': proc_encoded,
    'sev': sev_encoded,
    'hour': df['hour'],
    'weekday': df['weekday']
})

meta_scaled = scaler.transform(meta_features)

# –û–±—ä–µ–¥–∏–Ω—è–µ–º
X_final = hstack([X_text_tfidf, meta_scaled])

# üî• –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ
preds_proba = model.predict_proba(X_final)[:, 1]  # –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –∫–ª–∞—Å—Å–∞ 1 (–æ—à–∏–±–∫–∞)

# üöÄ –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
for i, proba in enumerate(preds_proba):
    print(f"–õ–æ–≥ {i+1}: –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –æ—à–∏–±–∫–∏ = {proba:.2f}")

print("‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
